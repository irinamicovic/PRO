name: C++ CI

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Enable debug logging
      run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

    - name: Install cppcheck
      run: sudo apt-get update && sudo apt-get install -y cppcheck

    - name: Set up C++ environment
      run: sudo apt-get install -y g++ make

    - name: Build
      run: g++ -o main main.cpp

    - name: Run tests
      run: ./main

    - name: Run static analysis
      run: cppcheck --enable=all --inconclusive --std=c++11 . > cppcheck-report.txt

    - name: Save build artifact (binary)
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./main

    - name: Save static analysis report
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: static-analysis-report
        path: cppcheck-report.txt

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download cppcheck setup
      if: runner.os == 'Windows'
      run: |
       $url = "https://github.com/danmar/cppcheck/releases/download/2.6/cppcheck-2.6-x64-setup.exe"
       $output = "cppcheck-setup.exe"
       curl -o $output -L $url


    - name: Set up C++ environment
      run: choco install mingw

    - name: Build
      run: g++ -o main.exe main.cpp

    - name: Run tests
      run: .\main.exe

    - name: Save build artifact (binary)
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./main.exe

  build-linux-local:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install cppcheck
      run: sudo apt-get install cppcheck

    - name: Set up C++ environment
      run: sudo apt-get install g++ make -y

    - name: Build
      run: g++ -o main main.cpp

    - name: Run tests
      run: ./main

    - name: Run static analysis
      run: cppcheck --enable=all --inconclusive --std=c++11 .

    - name: Save build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./main
